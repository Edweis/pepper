{"ast":null,"code":"import React from 'react';\nimport './App.css';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  // const [doc, updateDoc] = useAutomerge<DataT>({ expenses: [] });\n  // const [value, setValue] = useState(0);\n  // const [name, setName] = useState('');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: \"Hello\"\n  }, void 0, false); // return (\n  //   <div>\n  //     <main className=\"\">\n  //       <h1 className=\"\">Pepper</h1>\n  //       <hr className=\"\" />\n  //       <div>\n  //         <div>\n  //           <h2>Expenses</h2>\n  //         </div>\n  //         <ul>\n  //           {doc.expenses.map((e, index) => (\n  //             <li key={e.key}>\n  //               {e.name} - {e.value}{' '}\n  //               <button\n  //                 onClick={() =>\n  //                   updateDoc((d) => {\n  //                     delete d.expenses[index];\n  //                   })\n  //                 }\n  //               >\n  //                 Remove\n  //               </button>\n  //             </li>\n  //           ))}\n  //         </ul>\n  //         <div>\n  //           <input\n  //             type=\"number\"\n  //             placeholder=\"Value\"\n  //             value={value}\n  //             onChange={(e) => setValue(Number(e.target.value))}\n  //           />\n  //           <input\n  //             type=\"text\"\n  //             placeholder=\"Name\"\n  //             value={name}\n  //             onChange={(e) => setName(e.target.value)}\n  //           />\n  //           <button\n  //             onClick={() =>\n  //               updateDoc((d) =>\n  //                 d.expenses.push({ key: nanoid(), name, value }),\n  //               )\n  //             }\n  //           >\n  //             Add expense\n  //           </button>\n  //         </div>\n  //         <div>\n  //           <h2>Dump</h2>\n  //           <div>Size dump: {encodeBin(Automerge.save(doc)).length}</div>\n  //           <div>Size json: {JSON.stringify(doc).length}</div>\n  //           <h2>History</h2>\n  //           <div>\n  //             {Automerge.getHistory(doc).map((d) => (\n  //               <div key={d.change.hash}>\n  //                 {d.change.time} - {d.snapshot.expenses.length}\n  //               </div>\n  //             ))}\n  //           </div>\n  //         </div>\n  //       </div>\n  //     </main>\n  //   </div>\n  // );\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/eydwales/Documents/edweis/pepper/src/App.tsx"],"names":["React","App"],"mappings":"AAAA,OAAOA,KAAP,MAAgC,OAAhC;AACA,OAAO,WAAP;;;;AAQA,SAASC,GAAT,GAAe;AACX;AACA;AACA;AACA,sBAAO;AAAA;AAAA,mBAAP,CAJW,CAKX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEF;AACD;;KAvEQA,G;AAyET,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport { encodeBin, useAutomerge } from './lib/useAutomerge';\nimport Automerge from  'automerge'\nimport {nanoid} from 'nanoid'\ntype Expense = { key: string; name: string; value: number };\ntype DataT = {\n  expenses: Expense[];\n};\nfunction App() {\n    // const [doc, updateDoc] = useAutomerge<DataT>({ expenses: [] });\n    // const [value, setValue] = useState(0);\n    // const [name, setName] = useState('');\n    return <>Hello</>\n    // return (\n    //   <div>\n    //     <main className=\"\">\n    //       <h1 className=\"\">Pepper</h1>\n    //       <hr className=\"\" />\n    //       <div>\n    //         <div>\n    //           <h2>Expenses</h2>\n    //         </div>\n    //         <ul>\n    //           {doc.expenses.map((e, index) => (\n    //             <li key={e.key}>\n    //               {e.name} - {e.value}{' '}\n    //               <button\n    //                 onClick={() =>\n    //                   updateDoc((d) => {\n    //                     delete d.expenses[index];\n    //                   })\n    //                 }\n    //               >\n    //                 Remove\n    //               </button>\n    //             </li>\n    //           ))}\n    //         </ul>\n    //         <div>\n    //           <input\n    //             type=\"number\"\n    //             placeholder=\"Value\"\n    //             value={value}\n    //             onChange={(e) => setValue(Number(e.target.value))}\n    //           />\n    //           <input\n    //             type=\"text\"\n    //             placeholder=\"Name\"\n    //             value={name}\n    //             onChange={(e) => setName(e.target.value)}\n    //           />\n    //           <button\n    //             onClick={() =>\n    //               updateDoc((d) =>\n    //                 d.expenses.push({ key: nanoid(), name, value }),\n    //               )\n    //             }\n    //           >\n    //             Add expense\n    //           </button>\n    //         </div>\n    //         <div>\n    //           <h2>Dump</h2>\n    //           <div>Size dump: {encodeBin(Automerge.save(doc)).length}</div>\n    //           <div>Size json: {JSON.stringify(doc).length}</div>\n    //           <h2>History</h2>\n    //           <div>\n    //             {Automerge.getHistory(doc).map((d) => (\n    //               <div key={d.change.hash}>\n    //                 {d.change.time} - {d.snapshot.expenses.length}\n    //               </div>\n    //             ))}\n    //           </div>\n    //         </div>\n    //       </div>\n    //     </main>\n    //   </div>\n    \n  // );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}