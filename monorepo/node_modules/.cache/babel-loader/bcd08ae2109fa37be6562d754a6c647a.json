{"ast":null,"code":"// Properties of the document root object\nconst OPTIONS = Symbol('_options'); // object containing options passed to init()\n\nconst CACHE = Symbol('_cache'); // map from objectId to immutable object\n\nconst STATE = Symbol('_state'); // object containing metadata about current state (e.g. sequence numbers)\n// Properties of all Automerge objects\n\nconst OBJECT_ID = Symbol('_objectId'); // the object ID of the current object (string)\n\nconst CONFLICTS = Symbol('_conflicts'); // map or list (depending on object type) of conflicts\n\nconst CHANGE = Symbol('_change'); // the context object on proxy objects used in change callback\n\nconst ELEM_IDS = Symbol('_elemIds'); // list containing the element ID of each list element\n\nmodule.exports = {\n  OPTIONS,\n  CACHE,\n  STATE,\n  OBJECT_ID,\n  CONFLICTS,\n  CHANGE,\n  ELEM_IDS\n};","map":{"version":3,"sources":["/home/eydwales/Documents/edweis/pepper/node_modules/automerge/frontend/constants.js"],"names":["OPTIONS","Symbol","CACHE","STATE","OBJECT_ID","CONFLICTS","CHANGE","ELEM_IDS","module","exports"],"mappings":"AAAA;AACA,MAAMA,OAAO,GAAKC,MAAM,CAAC,UAAD,CAAxB,C,CAAuC;;AACvC,MAAMC,KAAK,GAAOD,MAAM,CAAC,QAAD,CAAxB,C,CAAuC;;AACvC,MAAME,KAAK,GAAOF,MAAM,CAAC,QAAD,CAAxB,C,CAAuC;AAEvC;;AACA,MAAMG,SAAS,GAAGH,MAAM,CAAC,WAAD,CAAxB,C,CAAuC;;AACvC,MAAMI,SAAS,GAAGJ,MAAM,CAAC,YAAD,CAAxB,C,CAAuC;;AACvC,MAAMK,MAAM,GAAML,MAAM,CAAC,SAAD,CAAxB,C,CAAuC;;AACvC,MAAMM,QAAQ,GAAIN,MAAM,CAAC,UAAD,CAAxB,C,CAAuC;;AAEvCO,MAAM,CAACC,OAAP,GAAiB;AACfT,EAAAA,OADe;AACNE,EAAAA,KADM;AACCC,EAAAA,KADD;AACQC,EAAAA,SADR;AACmBC,EAAAA,SADnB;AAC8BC,EAAAA,MAD9B;AACsCC,EAAAA;AADtC,CAAjB","sourcesContent":["// Properties of the document root object\nconst OPTIONS   = Symbol('_options')   // object containing options passed to init()\nconst CACHE     = Symbol('_cache')     // map from objectId to immutable object\nconst STATE     = Symbol('_state')     // object containing metadata about current state (e.g. sequence numbers)\n\n// Properties of all Automerge objects\nconst OBJECT_ID = Symbol('_objectId')  // the object ID of the current object (string)\nconst CONFLICTS = Symbol('_conflicts') // map or list (depending on object type) of conflicts\nconst CHANGE    = Symbol('_change')    // the context object on proxy objects used in change callback\nconst ELEM_IDS  = Symbol('_elemIds')   // list containing the element ID of each list element\n\nmodule.exports = {\n  OPTIONS, CACHE, STATE, OBJECT_ID, CONFLICTS, CHANGE, ELEM_IDS\n}\n"]},"metadata":{},"sourceType":"script"}