env:
  browser: true
  es2020: true
  mocha: true # for e2e-test stack 
extends:
  - airbnb-base
  - plugin:@typescript-eslint/recommended
  - prettier
parser: '@typescript-eslint/parser'
parserOptions:
  ecmaFeatures:
    jsx: true
  ecmaVersion: 11
  sourceType: module
plugins:
  - import
  - prettier
  - '@typescript-eslint/eslint-plugin'
  - react-hooks

rules:
  '@typescript-eslint/ban-ts-comment': off
  '@typescript-eslint/explicit-module-boundary-types': off
  '@typescript-eslint/no-namespace': off
  '@typescript-eslint/no-unused-vars': off
  'import/no-extraneous-dependencies': ["error", {"devDependencies": false}]
  "@typescript-eslint/no-shadow": ["error", { "ignoreTypeValueShadow": true }]
  "@typescript-eslint/no-use-before-define": ["error"]
  "no-shadow": "off"
  "no-use-before-define": "off"
  "prefer-destructuring": ["error", {"object": true, "array": false}]
  "react-hooks/exhaustive-deps": off # Checks effect dependencies
  "react-hooks/rules-of-hooks": error # Checks rules of Hooks
  camelcase: off
  '@typescript-eslint/naming-convention': 
      - error
      - selector: variable
        format:
          - camelCase
          - UPPER_CASE
          - PascalCase
        leadingUnderscore: allow
      - selector: variable
        modifiers: [destructured]
        format:
          - camelCase
          - UPPER_CASE
          - PascalCase
          - snake_case
  import/extensions: off
  import/no-unresolved: off # duplicate with typescript
  import/prefer-default-export: off
  jsx-a11y/label-has-associated-control: off
  jsx-a11y/no-autofocus: off
  no-console: off
  prettier/prettier: ["error", { "singleQuote": true, "trailingComma": "all" }]
overrides:
  - files: ['*.test.ts', '*.test.js'] 
    rules: 
      'import/first': off # We can order import as we want in jest files. It is useful to set the mock before imports
      'import/no-extraneous-dependencies': off # We allow common depencies (from monorepo/) in test files, if they are actually missing, test will fail
  - files: ['*.test.js'] 
    env: 
      jest: true
  - files: ['./services/cicd/**/*'] # Not compiled, it cannot use ES6
    rules: 
      'import/no-extraneous-dependencies': off
      '@typescript-eslint/no-var-requires': off
  - files: ['*.js'] # we allow require in .js files (like webpack or scripts)
    rules: 
      '@typescript-eslint/no-var-requires': off
      'import/no-extraneous-dependencies': off
settings:
  import/resolver:
    node:
      # paths: [components, lib, pages]
      extensions: [".js", ".jsx", ".ts", ".tsx"]
